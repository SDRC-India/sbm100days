!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("save-as"),require("@angular/common"),require("ngx-pagination"),require("ng2-search-filter"),require("@angular/forms"),require("@progress/kendo-angular-pdf-export")):"function"==typeof define&&define.amd?define("sdrc-table",["exports","@angular/core","save-as","@angular/common","ngx-pagination","ng2-search-filter","@angular/forms","@progress/kendo-angular-pdf-export"],t):t(e["sdrc-table"]={},e.ng.core,e.save,e.ng.common,e.ngxPagination,e.ng2SearchFilter,e.ng.forms,e.kendoAngularPdfExport)}(this,function(e,t,l,n,i,o,a,r){"use strict";l=l&&l.hasOwnProperty("default")?l["default"]:l;var s=function(){function e(){this.fixTableConfig={},this.checkStatus=!1,this.disableDeleteBtn=!0,this.p=1,this.isPaginate=!1,this.headerFixed=!1,this.searchBox=!1,this.downloadPdf=!1,this.downloadExcel=!1,this.downloadPdfByServer=!1,this.downloadExcelByServer=!1,this.onActionButtonClicked=new t.EventEmitter,this.onDownloadPdfByServerClicked=new t.EventEmitter,this.onDownloadExcelByServerClicked=new t.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){var e=this;this.rowData&&!this.isPaginate&&(this.itemsPerPage=this.rowData.length),setTimeout(function(){e.headerFixed&&e.setDuplicateFixedTable(),e.maxTableHeight&&$("#table-fixed-container"+e.id).css("max-height",e.maxTableHeight)})},e.prototype.appendHttp=function(e){return e.startsWith("http")?e:"http://"+e},e.prototype.sort=function(e){this.isDesc=!this.isDesc,this.columns=e,this.direction=this.isDesc?1:-1},e.prototype.setDuplicateFixedTable=function(){this.fixTableConfig.headerHeight=$("#"+this.id+" > thead").height(),this.fixTableConfig.width=$("#"+this.id).closest(".parent-tabl-container").width(),$("#header-fixed"+this.id).height(this.fixTableConfig.headerHeight),$("#header-fixed"+this.id).width(this.fixTableConfig.width-16),$("#"+this.id).parent()[0].scrollWidth==$("#"+this.id).parent()[0].clientWidth&&$("#header-fixed"+this.id).find("th").width($("#header-fixed"+this.id).find("th").width()+($("#header-fixed"+this.id).width()-$("#header-fixed"+this.id).find("thead").width())/$("#header-fixedtab1 th").length)},e.prototype.fixTableHeader=function(e){var t=$(e.target).scrollTop();$("#header-fixed"+this.id).scrollLeft($(e.target).scrollLeft()),t>=this.fixTableConfig.headerHeight?$("#header-fixed"+this.id).css("display","block"):t<this.fixTableConfig.headerHeight&&$("#header-fixed"+this.id).hide()},e.prototype.tableToExcel=function(i){var o=this,a=this.itemsPerPage;this.itemsPerPage=this.rowData.length,setTimeout(function(){var e="<table border='2px'>",t=0,n=document.getElementById(i);for(t=0;t<n.rows.length;t++)e=0==t?e+"<tr style='background-color: #00837F; color: #FFF; font-weight: bold' valign='top'>"+n.rows[t].innerHTML+"</tr>":e+"<tr valign='top'>"+n.rows[t].innerHTML+"</tr>";e=(e=(e=(e+="</table>").replace(/<A[^>]*>|<\/A>/g,"")).replace(/<img[^>]*>/gi,"")).replace(/<input[^>]*>|<\/input>/gi,""),l(new Blob([e],{type:"application/vnd.ms-excel"}),o.excelName+".xls"),setTimeout(function(){o.itemsPerPage=a},500)},200)},e.prototype.getType=function(e){return typeof e},e.prototype.createPdf=function(e,t){var n=this,i=$("kendo-pdf-export").find("#"+t).css("max-height"),o=this.itemsPerPage,a=this.sorting;this.itemsPerPage=this.rowData.length,this.sorting=!1,$("kendo-pdf-export").find("#"+t).scrollTop(0),setTimeout(function(){$("kendo-pdf-export").find("#"+t).css("max-height","none"),e.saveAs(n.pdfName+".pdf"),setTimeout(function(){n.itemsPerPage=o,n.sorting=a,$("kendo-pdf-export").find("#"+t).css("max-height",i)},1e3)},200)},e.prototype.actionClicked=function(e,t){var n={target:e,rowObj:t};this.onActionButtonClicked.emit(n)},e.prototype.downloadPdfByServerClicked=function(e,t){var n={table:e,tableData:t};this.onDownloadPdfByServerClicked.emit(n)},e.prototype.downloadExcelByServerClicked=function(e,t){var n={table:e,tableData:t};this.onDownloadExcelByServerClicked.emit(n)},e.decorators=[{type:t.Component,args:[{selector:"sdrc-table",template:'\n    <div class="row">           \n\n      <div class="col-md-12">\n        <div class="text-right" [hidden]="rowData && !rowData.length">\n        \x3c!-- <div class="col-md-3">\n          <div class="form-group">\n              <button class="btn btn-submit" [disabled]="tableService.disableDeleteBtn">Delete All</button>\n          </div>\n        </div> --\x3e\n        <div *ngIf="searchBox" class="table-btn search">\n          <div class="form-group">\n            <input class="form-control" type="text" id="myInput" [(ngModel)]="searchFilter" placeholder="..search">\n          </div>\n      </div>\n        <div *ngIf="downloadPdf" class="table-btn">\n          <button class="btn btn-pdf btn-submit" (click)="createPdf(pdf, \'table-fixed-container\'+id)"><span><i class="fa fa-download" style="font-size:15px;"\n                aria-hidden="true"></i></span>&nbsp;download pdf</button>\n        </div>\n        <div *ngIf="downloadExcel" class="table-btn">\n          <button class="btn btn-excel btn-submit" (click)="tableToExcel(id)"><span><i class="fa fa-file-excel-o"\n                style="font-size:15px;" aria-hidden="true"></i></span>&nbsp;download excel</button>\n        </div>\n        <div *ngIf="downloadPdfByServer" class="table-btn">\n          <button class="btn btn-pdf btn-submit" (click)="downloadPdfByServerClicked(id, rowData)"><span><i class="fa fa-download" style="font-size:15px;"\n                aria-hidden="true"></i></span>&nbsp;download pdf</button>\n        </div>\n        <div *ngIf="downloadExcelByServer" class="table-btn">\n          <button class="btn btn-excel btn-submit" (click)="downloadExcelByServerClicked(id, rowData)"><span><i class="fa fa-file-excel-o"\n                style="font-size:15px;" aria-hidden="true"></i></span>&nbsp;download excel</button>\n        </div>\n        \n      </div>\n    </div>\n\n    <div class="col-md-12">\n    <div class="parent-tabl-container">\n    <kendo-pdf-export #pdf paperSize="A2" margin="2cm" [repeatHeaders]="true"  [scale]="0.6">\n    <div class="filled-form view-form" id="{{\'table-fixed-container\'+id}}" (scroll)="fixTableHeader($event)" style="overflow: auto;">                 \n      \n      \x3c!-- Header fixed table section --\x3e\n      <table *ngIf="headerFixed" id="{{\'header-fixed\'+id}}" class="table table-striped table-bordered header-fixed">\n            <thead>\n                <tr>\n                  \x3c!-- <th><input type="checkbox" [(ngModel)]="tableService.checkStatus" (click)="tableService.selectAllCheckBoxes(rowData, !tableService.checkStatus)">&nbsp; Select All </th> --\x3e\n                  <th *ngFor="let col of columnData" [ngClass]="{selected: col == columns}">{{col}}\n                    <i *ngIf="sorting && (!sortExcludeColumn || (sortExcludeColumn && sortExcludeColumn.indexOf(col) == -1))" (click)="sort(col)" class="fa fa-caret-up fa-lg fa-sorting" [ngClass]="{\n                        \'fa-sort-asc\': (col == columns && !isDesc), \n                        \'fa-sort-desc\': (col == columns && isDesc) }" aria-hidden="true">\n                    </i>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                  <tr [ngClass]="rowDetails.cssClass ? rowDetails.cssClass:\'\'" *ngFor="let rowDetails of rowData | searchPipe: searchFilter | sortPipe: {property: columns, direction: direction} | paginate: { itemsPerPage: itemsPerPage, currentPage: p } let i = index;">\n                    \x3c!-- <td><input type="checkbox" [(ngModel)]="rowDetails.isChecked" (change)="tableService.singleCheckBoxClicked(tableService.rowData)"></td> --\x3e\n                    <td *ngFor="let col of columnData">\n                      <div *ngIf="getType(rowDetails[col]) != \'object\'">{{rowDetails[col]}}</div>\n                      <div *ngIf="getType(rowDetails[col]) == \'object\'" style="display: inline-flex;">\n                        <div *ngFor="let colDetails of rowDetails[col]">\n                            <div [ngSwitch]="colDetails.controlType" class="col-md-9 input-holder">\n                              <button *ngSwitchCase="\'button\'"  class="{{colDetails.class}}" type="{{colDetails.type}}" (click)="actionClicked(colDetails.class, rowDetails)"><i *ngIf="colDetails.icon" class="fa" [ngClass]="colDetails.icon"></i>{{colDetails.value}}</button>\n                                \n                                <input *ngSwitchCase="\'textbox\'" name="{{colDetails.name}}" [type]="colDetails.type" [(ngModel)]="colDetails.value" class="form-control">\n    \n                                \x3c!-- <input *ngSwitchCase="\'checkbox\'" name="{{colDetails.name}}" type="{{colDetails.type}}">                                    --\x3e\n                            </div>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>   \n                </tbody>\n         </table>\n        \n\n         \x3c!-- main table --\x3e\n          <table class="table table-striped table-bordered" id="{{id}}">\n            <thead>\n              <tr>\n                \x3c!-- <th><input type="checkbox" [(ngModel)]="tableService.checkStatus" (click)="tableService.selectAllCheckBoxes(rowData, !tableService.checkStatus)">&nbsp; Select All </th> --\x3e\n                <th *ngFor="let col of columnData" [ngClass]="{selected: col == columns}">{{col}}\n                  <i *ngIf="sorting && (!sortExcludeColumn || (sortExcludeColumn && sortExcludeColumn.indexOf(col) == -1))" (click)="sort(col)" class="fa fa-caret-up fa-lg fa-sorting" [ngClass]="{\n                      \'fa-sort-asc\': (col == columns && !isDesc), \n                      \'fa-sort-desc\': (col == columns && isDesc) }" aria-hidden="true">\n                  </i>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor="let rowDetails of rowData | searchPipe: searchFilter | sortPipe: {property: columns, direction: direction} | paginate: { itemsPerPage: itemsPerPage, currentPage: p, id:id } let i = index;">\n                \x3c!-- <td><input type="checkbox" [(ngModel)]="rowDetails.isChecked" (change)="tableService.singleCheckBoxClicked(tableService.rowData)"></td> --\x3e\n                <td *ngFor="let col of columnData">\n                  <div *ngIf="getType(rowDetails[col]) != \'object\'">{{rowDetails[col]}}</div>\n                  <div *ngIf="getType(rowDetails[col]) == \'object\'" style="display: inline-flex;">\n                    <div *ngFor="let colDetails of rowDetails[col]">\n                        <div [ngSwitch]="colDetails.controlType" class="col-md-9 input-holder">\n                          <button *ngSwitchCase="\'button\'"  class="{{colDetails.class}}" type="{{colDetails.type}}" (click)="actionClicked(colDetails.class, rowDetails)"><i *ngIf="colDetails.icon" class="fa" [ngClass]="colDetails.icon"></i>{{colDetails.value}}</button>\n                            \n                            <input *ngSwitchCase="\'textbox\'" name="{{colDetails.name}}" [type]="colDetails.type" [(ngModel)]="colDetails.value" class="form-control">\n\n                            \x3c!-- <input *ngSwitchCase="\'checkbox\'" name="{{colDetails.name}}" type="{{colDetails.type}}">                                    --\x3e\n                        </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>   \n            </tbody>\n          </table>   \n        \n        </div>\n        </kendo-pdf-export>\n        <br/>\n        <div  *ngIf="(rowData && !rowData.length) || (rowData && rowData.length && (rowData | searchPipe: searchFilter).length==0)" class="col-md-12 text-center search-area">No Data Found.</div>\n        <div *ngIf="isPaginate && rowData && rowData.length">\n          <pagination-controls (pageChange)="p = $event;" id="{{id}}" class="pagination-view"></pagination-controls>\n        </div>\n      </div>\n     </div>\n    </div>\n',styles:['.header-fixed{position:absolute;display:none;z-index:1;overflow:hidden;margin-right:15px}.parent-tabl-container{position:relative}table thead{background-color:#187080;color:#fff}td{text-align:center}table thead th{vertical-align:middle;text-align:center}.pagination-view{float:right}#myInput{width:100%;border-radius:0;font-size:16px;padding:7px 20px 12px 30px;font-style:inherit;border:1px solid #ddd;margin-bottom:12px;box-shadow:0 0 2px 0}.table-btn.search .form-group{position:relative}.table-btn.search .form-group:before{position:absolute;font-family:FontAwesome;top:5px;left:7px;color:#9c9c9c;content:"\\f002"}.search-area{font-style:italic;margin-top:30px;margin-bottom:30px;font-size:30px}input[type=text]{font-style:italic}.table-btn .btn-excel,.table-btn .btn-pdf{margin-bottom:16px;background-color:#357080;color:#fff;border-radius:0}.btn-excel:active,.btn-excel:focus{outline:0!important;border:none!important}.fa-sorting{cursor:pointer}.table-btn{display:inline-block;float:right;margin:0 5px}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:t.Input}],rowData:[{type:t.Input}],columnData:[{type:t.Input}],maxTableHeight:[{type:t.Input}],sorting:[{type:t.Input}],sortExcludeColumn:[{type:t.Input}],isPaginate:[{type:t.Input}],itemsPerPage:[{type:t.Input}],headerFixed:[{type:t.Input}],searchBox:[{type:t.Input}],downloadPdf:[{type:t.Input}],pdfName:[{type:t.Input}],downloadExcel:[{type:t.Input}],excelName:[{type:t.Input}],downloadPdfByServer:[{type:t.Input}],downloadExcelByServer:[{type:t.Input}],onActionButtonClicked:[{type:t.Output}],onDownloadPdfByServerClicked:[{type:t.Output}],onDownloadExcelByServerClicked:[{type:t.Output}]},e}(),c=function(){function e(){}return e.prototype.transform=function(e,o){if(e!=undefined&&null!=e)return e.sort(function(e,t){var n=parseInt(e[o.property]),i=parseInt(t[o.property]);return isNaN(n)&&isNaN(i)?e[o.property]<t[o.property]?-1*o.direction:e[o.property]>t[o.property]?1*o.direction:0:isNaN(n)||isNaN(i)?void 0:n<i?-1*o.direction:i<n?1*o.direction:0})},e.decorators=[{type:t.Pipe,args:[{name:"sortPipe"}]}],e}(),d=function(){function e(){}return e.prototype.transform=function(e,o){return e?o?(o=o.toLowerCase(),e.filter(function(e){for(var t=[],n=Object.values(e).length-1;0<=n;n--){var i=Object.values(e)[n];"object"!=typeof i&&t.push(i)}return JSON.stringify(t).toLowerCase().includes(o)})):e:[]},e.decorators=[{type:t.Pipe,args:[{name:"searchPipe"}]}],e}(),p=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,a.FormsModule,i.NgxPaginationModule,o.Ng2SearchPipeModule,r.PDFExportModule],declarations:[s,d,c],providers:[],exports:[s,d,c]}]}],e}();e.TableComponent=s,e.SortPipePipe=c,e.SearchPipePipe=d,e.TableModule=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=sdrc-table.umd.min.js.map